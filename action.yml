name: 'apkcombo-downloader'

author: "Ariel Tubul"
description: 'Download an apk from apkcombo'

branding:
  color: 'red'
  icon: 'smartphone'

inputs:
  package:
    description: 'Package name to download'
    required: true

  output-apk:
    description: 'Path to output apk file'
    required: true

  apk-language:
    description: 'Language of apk to download'
    required: false
    default: 'en'

  apk-device:
    description: 'Target device for the apk (phone / tablet / tv)'
    required: false
    default: 'default'

  apk-architecture:
    description: 'Target architecture for the apk (arm64-v8a / armeabi-v7a / x86 / x86_64)'
    required: false
    default: 'default'

  apk-dpi:
    description: 'Target apk dpi'
    required: false
    default: '480'

  apk-sdk:
    description: 'Target apk sdk'
    required: false
    default: 'default'

  artifact-name:
    description: 'Name of artifact to upload'
    required: false
    default: ''

runs:
  using: 'docker'
  image: 'selenium/standalone-edge:dev'

  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Prepare apkmod
      run: pip install -r requirements.txt
      shell: pwsh

    - name: Download apk
      run: ./downloader.py --package ${{ inputs.package }} --path ${{ inputs.output-apk }} --language ${{ input.apk-language }} --device ${{ input.apk-device }} --architecture ${{ input.apk-architecture }} --dpi ${{ input.apk-dpi }} --sdk ${{ input.apk-sdk }}
      shell: pwsh

    - name: Upload downloaded apk
      if: inputs.artifact-name != ''
      uses: actions/upload-artifact@v3.1.2

      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.output-apk }}
